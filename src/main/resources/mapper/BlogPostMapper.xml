<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qht.dao.BlogPostMapper">

    <select id="queryCount" resultType="_int">
        select count(1) from blog_post
    </select>

    <insert id="insertBlog" parameterType="BlogPost">
        INSERT INTO blog_post(release_time,publishing_users,blog_title,blog_content_html,blog_content_md,blog_sort_name,blog_tags_name)
        VALUES(NOW(),#{publishingUsers},#{blogTitle},#{blogContentHtml},#{blogContentMd},#{blogSortName},#{blogTagsName})
    </insert>

    <select id="select" resultType="BlogPost">
        select * from blog_post
    </select>

    <select id="queryOne" resultType="BlogPost">
        select * from blog_post where blog_id = #{id}
    </select>

    <select id="queryBlogIDByTitle" resultType="_int">
        select blog_id from blog_post where blog_title = #{title}
    </select>

    <update id="updateBlog">
        update blog_post set blog_title = #{blogTitle}, blog_content_Html = #{blogContentHtml},
        blog_content_md = #{blogContentMd},blog_sort_name = #{blogSortName},blog_tags_name = #{blogTagsName} where blog_id = #{blogId}
    </update>

    <delete id="deleteBlog">
        delete from blog_post where blog_id = #{id}
    </delete>

    <select id="querySort" resultType="_int" parameterType="String">
        select count(1) from blog_sort where sort_name = #{sortName}
    </select>

    <insert id="insertSort" parameterType="String">
        insert into blog_sort(sort_name) values (#{sortName})
    </insert>

    <select id="queryAllSort" resultType="BlogSort">
        select * from blog_sort
    </select>

    <insert id="insertTags">
        insert into blog_tags(tags_name) values (#{tags})
    </insert>

    <select id="queryTagsByName" resultType="BlogTags">
        select * from blog_tags where tags_name = #{tags}
    </select>
    
    <insert id="insertBlogTagsRelation">
        insert into blog_tags_relation(blog_id,tags_id) values (#{blogId},#{tagId})
    </insert>



    <delete id="relationship">
        delete from blog_tags_relation where blog_id = #{blogId}
    </delete>

    <select id="sortCount" resultType="_int">
        select count(1) from blog_sort
    </select>
    <select id="tagsCount" resultType="_int">
        select count(1) from blog_tags
    </select>

    <select id="queryAllTags" resultType="BlogTags">
        select * from blog_tags
    </select>

    <delete id="deleteSort">
        delete from blog_sort where sort_name = #{sortName}
    </delete>

    <delete id="deleteTags">
        delete from blog_tags where tags_id = #{blogId}
    </delete>

    <delete id="delTagsRelationship" parameterType="_int">
        delete from blog_tags_relation where blog_id = #{blogId}
    </delete>

    <select id="queryTagsRelationCount" resultType="_int">
        SELECT COUNT(1) FROM blog_post WHERE blog_id = (SELECT blog_id FROM blog_tags_relation WHERE tags_id = #{tagsId})
    </select>

    <select id="queryBlogCountBySort" resultType="_int">
        select count(1) from blog_post where blog_sort_name = #{sort}
    </select>
</mapper>